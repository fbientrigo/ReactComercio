[{"C:\\Users\\fbien\\Desktop\\TodoCelular\\Todocel\\src\\index.js":"1","C:\\Users\\fbien\\Desktop\\TodoCelular\\Todocel\\src\\App.jsx":"2","C:\\Users\\fbien\\Desktop\\TodoCelular\\Todocel\\src\\lib\\commerce.js":"3","C:\\Users\\fbien\\Desktop\\TodoCelular\\Todocel\\src\\components\\Footer\\index.jsx":"4","C:\\Users\\fbien\\Desktop\\TodoCelular\\Todocel\\src\\components\\NavBar\\index.jsx":"5","C:\\Users\\fbien\\Desktop\\TodoCelular\\Todocel\\src\\components\\Checkout\\index.jsx":"6","C:\\Users\\fbien\\Desktop\\TodoCelular\\Todocel\\src\\components\\Products\\index.jsx":"7","C:\\Users\\fbien\\Desktop\\TodoCelular\\Todocel\\src\\components\\Basket\\index.jsx":"8","C:\\Users\\fbien\\Desktop\\TodoCelular\\Todocel\\src\\components\\Basket\\Banner.jsx":"9","C:\\Users\\fbien\\Desktop\\TodoCelular\\Todocel\\src\\components\\Spinner\\index.js":"10","C:\\Users\\fbien\\Desktop\\TodoCelular\\Todocel\\src\\components\\CustomCard\\index.jsx":"11","C:\\Users\\fbien\\Desktop\\TodoCelular\\Todocel\\src\\components\\Banner\\index.jsx":"12","C:\\Users\\fbien\\Desktop\\TodoCelular\\Todocel\\src\\components\\Product\\index.jsx":"13","C:\\Users\\fbien\\Desktop\\TodoCelular\\Todocel\\src\\components\\Banner\\Slider\\ImageSlider.jsx":"14","C:\\Users\\fbien\\Desktop\\TodoCelular\\Todocel\\src\\components\\Banner\\Slider\\SliderData.js":"15","C:\\Users\\fbien\\Desktop\\TodoCelular\\Todocel\\src\\components\\Servicios\\index.jsx":"16","C:\\Users\\fbien\\Desktop\\TodoCelular\\Todocel\\src\\components\\ProductView\\index.jsx":"17","C:\\Users\\fbien\\Desktop\\TodoCelular\\Todocel\\src\\components\\AfterFX\\index.jsx":"18","C:\\Users\\fbien\\Desktop\\TodoCelular\\Todocel\\src\\components\\Blog\\index.jsx":"19"},{"size":141,"mtime":1613771158000,"results":"20","hashOfConfig":"21"},{"size":6261,"mtime":1638226430303,"results":"22","hashOfConfig":"21"},{"size":132,"mtime":1613771158000,"results":"23","hashOfConfig":"21"},{"size":424,"mtime":1637733107561,"results":"24","hashOfConfig":"21"},{"size":1817,"mtime":1637733107563,"results":"25","hashOfConfig":"21"},{"size":7044,"mtime":1637733107559,"results":"26","hashOfConfig":"21"},{"size":4999,"mtime":1638234898987,"results":"27","hashOfConfig":"21"},{"size":1608,"mtime":1613771158000,"results":"28","hashOfConfig":"21"},{"size":863,"mtime":1637288173002,"results":"29","hashOfConfig":"21"},{"size":191,"mtime":1613771158000,"results":"30","hashOfConfig":"21"},{"size":3144,"mtime":1637288173009,"results":"31","hashOfConfig":"21"},{"size":1591,"mtime":1638227231472,"results":"32","hashOfConfig":"21"},{"size":358,"mtime":1637739815808,"results":"33","hashOfConfig":"21"},{"size":1179,"mtime":1637733107550,"results":"34","hashOfConfig":"21"},{"size":353,"mtime":1637288172984,"results":"35","hashOfConfig":"21"},{"size":2395,"mtime":1637733107569,"results":"36","hashOfConfig":"21"},{"size":4315,"mtime":1637739793456,"results":"37","hashOfConfig":"21"},{"size":437,"mtime":1637733107548,"results":"38","hashOfConfig":"21"},{"size":2283,"mtime":1638234682346,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1qvi1yb",{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"42"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"C:\\Users\\fbien\\Desktop\\TodoCelular\\Todocel\\src\\index.js",[],["82","83"],"C:\\Users\\fbien\\Desktop\\TodoCelular\\Todocel\\src\\App.jsx",["84","85"],"// Parte de React y el Funcionamiento de MAteriaul UI\r\nimport { useState, useEffect } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route, HashRouter } from \"react-router-dom\";\r\nimport { CssBaseline } from \"@material-ui/core\";\r\n// Apis usadas\r\nimport { commerce } from \"./lib/commerce\";\r\nimport countapi from \"countapi-js\";\r\n//componentes\r\nimport NavBar from \"./components/NavBar\";\r\nimport Blog from \"./components/Blog\";\r\nimport Footer from \"./components/Footer\";\r\nimport Products from \"./components/Products\";\r\nimport Basket from \"./components/Basket\";\r\nimport Checkout from \"./components/Checkout\";\r\nimport ProductView from \"./components/ProductView\";\r\nimport Servicios from \"./components/Servicios\";\r\nimport Spinner from \"./components/Spinner\";\r\n//esto es para enviar mails automaticos\r\nimport{ init } from 'emailjs-com';\r\ninit(\"user_n6ZOPkoUzAa0g3anpbeRJ\");\r\n\r\nconst App = () => {\r\n  const [products, setProducts] = useState([]);\r\n  const [category, setCategory] = useState([]);\r\n  const [basketData, setBasketData] = useState({});\r\n  const [orderInfo, setOrderInfo] = useState({});\r\n  const [orderError, setOrderError] = useState(\"\");\r\n  const [visitas, setVisitas] = useState(0);\r\n\r\n  const fetchProducts = async () => {\r\n    //conseguimos los productos y categorias\r\n    // por default el limite es 20\r\n    const {data:responseProd} = await commerce.products.list({limit:200});\r\n    const {data:responseCat} = await commerce.categories.list();\r\n    //debuggin\r\n    //console.log(responseCat);\r\n    //console.log(responseProd);\r\n\r\n    setProducts(responseProd);\r\n    setCategory(responseCat);\r\n\r\n    //console.log(\"Observa como se actualizaron category y products con React Hook useState\");\r\n    //console.log(products);\r\n    //console.log(category);\r\n    //console.log(\"---------\");\r\n\r\n  };\r\n\r\n\r\n  const fetchBasketData = async () => {\r\n    const response = await commerce.cart.retrieve();\r\n    setBasketData(response);\r\n  };\r\n\r\n  const addProduct = async (productId, quantity) => {\r\n    const response = await commerce.cart.add(productId, quantity);\r\n    setBasketData(response.cart);\r\n  };\r\n\r\n  const RemoveItemFromBasket = async (itemId) => {\r\n    const response = await commerce.cart.remove(itemId);\r\n    setBasketData(response.cart);\r\n  };\r\n\r\n  const handleEmptyBasket = async () => {\r\n    const response = await commerce.cart.empty();\r\n    setBasketData(response.cart);\r\n  };\r\n\r\n  const updateProduct = async (productId, quantity) => {\r\n    const response = await commerce.cart.update(productId, { quantity });\r\n    setBasketData(response.cart);\r\n  };\r\n\r\n  const refreshBasket = async () => {\r\n    const newBasketData = await commerce.cart.refresh();\r\n    setBasketData(newBasketData);\r\n  };\r\n\r\n  const handleCheckout = async (checkoutId, orderData) => {\r\n    try {\r\n      // const incomingOrder = await commerce.checkout.capture(\r\n      //   checkoutId,\r\n      //   orderData\r\n      // );\r\n\r\n      setOrderInfo(orderData);\r\n\r\n      refreshBasket();\r\n    } catch (error) {\r\n      setOrderError(\r\n        (error.data && error.data.error && error.data.error.message) ||\r\n          \"Un error acaba de ocurrir, considera contacto por WSP o el Email en el Pie de Pagina\"\r\n      );\r\n    }\r\n  };\r\n\r\n    // count api para contar las visitas de la pagina\r\n    //https://countapi.xyz/\r\n    // To Do: [] Agregar el count para cada vez que se revisen los produtos, o compras\r\n    \r\n\r\n\r\n    useEffect(() => {\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        fetchProducts();\r\n        fetchBasketData();\r\n        countapi.visits().then((result) => {\r\n            console.log(\"Las visitas a esta pagina\");\r\n            //una visita a la pagian correspone a cada vez que la he recargado\r\n            setVisitas(result.value/8);\r\n            // a dia de 14 noviembre hay unas 49227 visitas mias, asi que considerese restarle\r\n            //ya que en el desarrollo tendremos que ir recargando \r\n            console.log(visitas);\r\n        });\r\n\r\n\r\n        // console.log(\"Observa como se actualizaron category y products con React Hook useState\");\r\n        // console.log(products);\r\n        // console.log(category);\r\n\r\n        //elimina el siguiente espacio en blanco\r\n        // eslint-disable-next-line\r\n    \r\n        },[]); // aqui va }, []); que es el array de dependencias, React me recomendo quitarla debido a errores\r\n        //despues de un poco de research no encontre una solucion al problema\r\n        //https://stackoverflow.com/questions/55840294/how-to-fix-missing-dependency-warning-when-using-useeffect-react-hook\r\n\r\n\r\n/* Return principal de la funcion */\r\n  return (\r\n    <HashRouter>\r\n      <div>\r\n        <CssBaseline />\r\n        <NavBar\r\n          basketItems={basketData.total_items}\r\n          totalCost={\r\n            (basketData.subtotal &&\r\n              basketData.subtotal.formatted_with_symbol) ||\r\n            \"00\"\r\n          }\r\n        />\r\n        <Switch>\r\n            <Route exact path=\"/\">\r\n                <div> </div>\r\n                <Products products={products} addProduct={addProduct} category={category} />\r\n                <Footer />\r\n            </Route>\r\n\r\n            <Route exact path=\"/basket\">\r\n                <Basket basketData={basketData} updateProduct={updateProduct} handleEmptyBasket={handleEmptyBasket} RemoveItemFromBasket={RemoveItemFromBasket} />\r\n                <Footer />\r\n            </Route>\r\n\r\n            <Route exact path=\"/checkout\">\r\n                <Checkout orderInfo={orderInfo} orderError={orderError} numeroVisitante={visitas} basketData={basketData} handleCheckout={handleCheckout} \r\n                totalCost={\r\n                    (basketData.subtotal &&\r\n                    basketData.subtotal.formatted_with_symbol) ||\r\n                    \"00\"\r\n                }\r\n                />\r\n            </Route>\r\n\r\n            <Route exact path=\"/servicios\">\r\n                <Servicios />\r\n            </Route>\r\n\r\n            <Route exact path=\"/product-view/:id\">\r\n                <ProductView addProduct={addProduct} Spinner={Spinner} Footer={Footer} />\r\n            </Route>\r\n\r\n            <Route exact path=\"/blog\">\r\n                <Blog />\r\n            </Route>\r\n\r\n        </Switch>\r\n      </div>\r\n    </HashRouter>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","C:\\Users\\fbien\\Desktop\\TodoCelular\\Todocel\\src\\lib\\commerce.js",[],"C:\\Users\\fbien\\Desktop\\TodoCelular\\Todocel\\src\\components\\Footer\\index.jsx",[],"C:\\Users\\fbien\\Desktop\\TodoCelular\\Todocel\\src\\components\\NavBar\\index.jsx",[],"C:\\Users\\fbien\\Desktop\\TodoCelular\\Todocel\\src\\components\\Checkout\\index.jsx",["86","87","88","89","90","91"],"import { useState, useEffect, useRef } from \"react\";\r\nimport {\r\n  Paper,\r\n  Container,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { commerce } from \"../../lib/commerce\";\r\n//para contacto por mail\r\nimport emailjs from \"emailjs-com\";\r\nimport \"./style.css\";\r\nimport guia from \"./guia.png\";\r\n\r\n/*          Componente Checkout\r\n    Se opta por una forma hibrida de automatizacion, debido a la inestabilidad de BSale\r\n    Esta forma aumenta la seguridad y permite que un vendedor cierre la venta\r\n    Forma -> Vendedor -> Confirmacion y Forma de Pago\r\n\r\n\r\n*/\r\n\r\nconst Checkout = ({ basketData, numeroVisitante, totalCost }) => {\r\n\r\n    //checkoutData contiene:\r\n    const [checkoutData, setCheckoutData] = useState(\"\");\r\n    //Cuanto es lo que estamos ocbrando al cliente\r\n    const [pagar, setPagar] = useState(totalCost);\r\n    let descuento = 1.0; //porcentajes\r\n\r\n    //console.log(\"El checkoutData es:\");\r\n    //console.log(checkoutData);\r\n\r\n    //Fecha\r\n    var today = new Date();\r\n    var dd = String(today.getDate()).padStart(2, '0');\r\n    var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\r\n    var yyyy = today.getFullYear();\r\n\r\n    today = dd + '-' + mm + '-' + yyyy;\r\n    //console.log(\"Fecha de Hoy es\");\r\n    //console.log(\"El Ticket ID es la Fecha con el id del visitante adelante\");\r\n    //console.log(numeroVisitante);\r\n    let ticketid = numeroVisitante + \"-\" + today;\r\n    //console.log(ticketid)\r\n    \r\n    //Enviar el Mail\r\n    /*La funcion se encarga de tomar todo lo de <from> y lanzarlo por la API de emails*/\r\n    function sendEmail(e) {\r\n        e.preventDefault();\r\n        console.log(\"Dentro del email tenemos:\");\r\n        console.log(e);\r\n\r\n        //la estoy construyendo a mi conveniencia\r\n        // ToDo\r\n        // [] Agregar el userID al .env\r\n        emailjs.sendForm('gmail', 'ticket', e.target, 'user_n6ZOPkoUzAa0g3anpbeRJ')\r\n            .then((result) => {\r\n                console.log(result.text);\r\n            }, (error) => {\r\n                console.log(error.text);\r\n            });\r\n            // e.target.reset(); //una vez enviada se resetea\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (basketData.id) {\r\n        const generateToken = async () => {\r\n            try {\r\n            const response = await commerce.checkout.generateToken(\r\n                basketData.id,\r\n                {\r\n                type: \"cart\",\r\n                }\r\n            );\r\n            //debug\r\n            //console.log(\"Data de Respuesta: --------\");\r\n            setCheckoutData(response);\r\n            //Actualizamos cuanto Paga Dependiendo de condiciones\r\n            // react infinite loop warning 24 noviembre\r\n            // desde que agreguye este comportamiento tuve algunos infinitos, y luego dejaron de ocurrir\r\n           \r\n            //aplicamos el default de que usen el retiro en tienda\r\n           setPagar(basketData.subtotal.raw * 0.9);\r\n            //debug\r\n            //console.log(\"Data de Respuesta: --------\");\r\n            //console.log(response);\r\n            } catch (error) {\r\n                //console.error(\"Checkout error: \", error);\r\n            }\r\n            };\r\n            //para que es esto?\r\n            generateToken();\r\n        }\r\n   // }, [basketData, history]); //elimine esta opcion el 24 de noviembre por renders infinitos\r\n   // los renders eran producidos por la linea setCheckoutData()\r\n    }, []);\r\n\r\n    //console.log(\"basketData que es lo mas importante\");\r\n    //console.log(basketData);\r\n\r\n    //seccion que crea el mensaje a enviar\r\n    /*El mensaje contiene todos los datos sobre el producto, y permite que sea leido en la tienda*/\r\n    let mensaje = [];\r\n    if (checkoutData.products && basketData) {\r\n        //Creamos el Email\r\n        mensaje.push(\"Subtotal:  \"+\"$\"+basketData.subtotal.raw); \r\n        mensaje.push(\"Aplicando Descuentos:  \"+\"$\"+pagar); \r\n        mensaje.push(\"<br>\");\r\n        mensaje.push(\"Productos: \");\r\n        mensaje.push(\"<br>\");\r\n        mensaje.push(\"<ul>\");\r\n        checkoutData.products.map((product) => {\r\n            mensaje.push(\"<li>\");\r\n            mensaje.push(product.name);\r\n            mensaje.push(\"sku: \" + product.sku);\r\n            mensaje.push(\"$\"+product.price.raw);\r\n            mensaje.push(\"<br>\");\r\n            mensaje.push(\"-----\")\r\n            mensaje.push(\"</li>\");\r\n        });\r\n        mensaje.push(\"</ul>\");\r\n\r\n    // let mensajeString = mensaje.join('\\r\\n');\r\n    }\r\n    let mensajeString = mensaje.join('\\r\\n');\r\n    //ticketid, nombre, email, mensaje\r\n\r\n    // Controla el Cambio de Select, para retiro en tienda o domicilio\r\n    const cambioSelect = (e) => {\r\n        console.log(\"Ha ocurrido un Cambio en Select:\");\r\n        let seleccion = e.nativeEvent.target.value;\r\n        //console.log(e.nativeEvent.target.value);\r\n        //Entrega a Domicilio\r\n        //Retiro en Tienda\r\n        if (seleccion === 'Entrega a Domicilio') {\r\n            descuento = 1.0;\r\n            console.log('Aplicando descuento ' + descuento);\r\n            setPagar(basketData.subtotal.raw * descuento);\r\n        }\r\n        else if (seleccion === 'Retiro en Tienda') {\r\n            descuento = 0.9;\r\n            console.log('Aplicando descuento ' + descuento);\r\n            setPagar(basketData.subtotal.raw * descuento);\r\n        }\r\n    }\r\n \r\n\r\n    return (\r\n      <div className=\"checkout\">\r\n        <img src={guia} alt=\"guia de compra\" className=\"guia\"/>\r\n\r\n        <Typography className=\"subtotal\" variant=\"h3\">$ {pagar}</Typography>\r\n        <Container>\r\n        <Paper className=\"paper\" elevation={3}>\r\n        <div className=\"container\">\r\n        <form onSubmit={sendEmail}>\r\n        <div className=\"row pt-5 mx-auto\">\r\n            <div className=\"col-8 form-group mx-auto\">\r\n                <input type=\"text\" className=\"form-control\" placeholder=\"Nombre\" name=\"nombre\"/>\r\n            </div>\r\n\r\n            <div className=\"col-8 form-group pt-2 mx-auto\">\r\n                <input type=\"email\" className=\"form-control\" placeholder=\"Email\" name=\"email\"/>\r\n            </div>\r\n\r\n            <div className=\"col-8\">\r\n                <input type=\"text\" className=\"form-control\" placeholder=\"Direccion\" name=\"direccion\"/>\r\n            </div>\r\n\r\n\r\n            <select name=\"metodorecepcion\" id=\"recepcion\" className=\"selecciona\" onChange={cambioSelect}>\r\n                <option value=\"Retiro en Tienda\">Retiro en Tienda - Descuento 10%</option>\r\n                <option value=\"Entrega a Domicilio\">Domicilio - Aplican costos extras</option>\r\n            </select>\r\n\r\n            <div className=\"col-8 pt-3 mx-auto\">\r\n                <input type=\"submit\" className=\"botonSubmit\" value=\"Send Message\"></input>\r\n            </div>  \r\n\r\n            <input type=\"hidden\" cols=\"30\" rows=\"8\" name=\"mensaje\" value={mensajeString}/>\r\n            <input type=\"hidden\" name=\"ticketid\" value={ticketid}/>\r\n\r\n        </div>\r\n        </form>\r\n        </div>\r\n        </Paper>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\nexport default Checkout;\r\n","C:\\Users\\fbien\\Desktop\\TodoCelular\\Todocel\\src\\components\\Products\\index.jsx",[],"C:\\Users\\fbien\\Desktop\\TodoCelular\\Todocel\\src\\components\\Basket\\index.jsx",[],"C:\\Users\\fbien\\Desktop\\TodoCelular\\Todocel\\src\\components\\Basket\\Banner.jsx",[],"C:\\Users\\fbien\\Desktop\\TodoCelular\\Todocel\\src\\components\\Spinner\\index.js",[],"C:\\Users\\fbien\\Desktop\\TodoCelular\\Todocel\\src\\components\\CustomCard\\index.jsx",[],"C:\\Users\\fbien\\Desktop\\TodoCelular\\Todocel\\src\\components\\Banner\\index.jsx",[],"C:\\Users\\fbien\\Desktop\\TodoCelular\\Todocel\\src\\components\\Product\\index.jsx",[],"C:\\Users\\fbien\\Desktop\\TodoCelular\\Todocel\\src\\components\\Banner\\Slider\\ImageSlider.jsx",[],"C:\\Users\\fbien\\Desktop\\TodoCelular\\Todocel\\src\\components\\Banner\\Slider\\SliderData.js",[],"C:\\Users\\fbien\\Desktop\\TodoCelular\\Todocel\\src\\components\\Servicios\\index.jsx",[],"C:\\Users\\fbien\\Desktop\\TodoCelular\\Todocel\\src\\components\\ProductView\\index.jsx",[],"C:\\Users\\fbien\\Desktop\\TodoCelular\\Todocel\\src\\components\\AfterFX\\index.jsx",[],["92","93"],"C:\\Users\\fbien\\Desktop\\TodoCelular\\Todocel\\src\\components\\Blog\\index.jsx",[],{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","severity":1,"message":"99","line":3,"column":27,"nodeType":"100","messageId":"101","endLine":3,"endColumn":33},{"ruleId":"102","severity":1,"message":"103","line":125,"column":11,"nodeType":"104","endLine":125,"endColumn":13,"suggestions":"105"},{"ruleId":"98","severity":1,"message":"106","line":1,"column":31,"nodeType":"100","messageId":"101","endLine":1,"endColumn":37},{"ruleId":"98","severity":1,"message":"107","line":7,"column":10,"nodeType":"100","messageId":"101","endLine":7,"endColumn":20},{"ruleId":"102","severity":1,"message":"108","line":96,"column":8,"nodeType":"104","endLine":96,"endColumn":10,"suggestions":"109"},{"ruleId":"110","severity":1,"message":"111","line":106,"column":35,"nodeType":"112","messageId":"113","endLine":106,"endColumn":36},{"ruleId":"110","severity":1,"message":"111","line":107,"column":47,"nodeType":"112","messageId":"113","endLine":107,"endColumn":48},{"ruleId":"114","severity":1,"message":"115","line":112,"column":45,"nodeType":"116","messageId":"117","endLine":112,"endColumn":47},{"ruleId":"94","replacedBy":"118"},{"ruleId":"96","replacedBy":"119"},"no-native-reassign",["120"],"no-negated-in-lhs",["121"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'visitas'. Either include it or remove the dependency array.","ArrayExpression",["122"],"'useRef' is defined but never used.","'useHistory' is defined but never used.","React Hook useEffect has missing dependencies: 'basketData.id' and 'basketData.subtotal.raw'. Either include them or remove the dependency array. If 'setPagar' needs the current value of 'basketData.subtotal.raw', you can also switch to useReducer instead of useState and read 'basketData.subtotal.raw' in the reducer.",["123"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["120"],["121"],"no-global-assign","no-unsafe-negation",{"desc":"124","fix":"125"},{"desc":"126","fix":"127"},"Update the dependencies array to be: [visitas]",{"range":"128","text":"129"},"Update the dependencies array to be: [basketData.id, basketData.subtotal.raw]",{"range":"130","text":"131"},[4254,4256],"[visitas]",[3445,3447],"[basketData.id, basketData.subtotal.raw]"]